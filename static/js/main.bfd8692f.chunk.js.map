{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","console","log","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","StyledImg","className","persik","alt","styled","img","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,oC,smBC0D5BC,EAhDF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAEtB,OADAC,QAAQC,IAAIF,GAEV,kBAAC,IAAD,CAAOF,GAAIA,GACT,kBAAC,IAAD,oGACCE,GACC,kBAAC,IAAD,CAAOG,MAAM,oCACX,kBAAC,IAAD,CACEC,OACEJ,EAAYK,UACV,kBAAC,IAAD,CAAQC,IAAKN,EAAYK,YACvB,KAENE,YACEP,EAAYQ,MAAQR,EAAYQ,KAAKL,MACjCH,EAAYQ,KAAKL,MACjB,IATR,UAYMH,EAAYS,WAZlB,YAYgCT,EAAYU,UAZ5C,OAiBJ,kBAAC,IAAD,CAAOP,MAAM,sBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQQ,KAAK,KAAKC,MAAM,IAAIC,QAASd,EAAIe,UAAQ,UAAjD,4C,yQCzBV,IAAMC,EAASC,cAuBAC,EArBA,SAACC,GAAD,OACb,kBAAC,IAAD,CAAOpB,GAAIoB,EAAMpB,IACf,kBAAC,IAAD,CACEqB,KACE,kBAAC,IAAD,CAAmBN,QAASK,EAAMnB,GAAIe,UAAQ,QAC3CC,IAAWK,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAHhD,+FAUA,kBAACC,EAAD,CAAWC,UAAU,SAAShB,IAAKiB,IAAQC,IAAI,qBAW7CH,EAAYI,IAAOC,IAAV,KCMAC,EAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEV5B,EAFU,KAEG+B,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAejB,KAAK,WAHxC,mBAGVqB,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAMpD,EAAK,SAAAqD,GACVtB,EAAesB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAM1B,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAMlC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,MC7B3BqC,IAAOC,KAAK,gBAEZmB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.bfd8692f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\n\nconst Home = ({ id, go, fetchedUser }) => {\n  console.log(fetchedUser);\n  return (\n    <Panel id={id}>\n      <PanelHeader>Добро пожаловать</PanelHeader>\n      {fetchedUser && (\n        <Group title=\"User Data Fetched with VK Bridge\">\n          <Cell\n            before={\n              fetchedUser.photo_200 ? (\n                <Avatar src={fetchedUser.photo_200} />\n              ) : null\n            }\n            description={\n              fetchedUser.city && fetchedUser.city.title\n                ? fetchedUser.city.title\n                : \"\"\n            }\n          >\n            {`${fetchedUser.first_name} ${fetchedUser.last_name} `}\n          </Cell>\n        </Group>\n      )}\n\n      <Group title=\"Navigation Example\">\n        <Div>\n          <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n            Начать\n          </Button>\n        </Div>\n      </Group>\n    </Panel>\n  );\n};\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { platform, IOS } from \"@vkontakte/vkui\";\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport PanelHeaderButton from \"@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton\";\nimport Icon28ChevronBack from \"@vkontakte/icons/dist/28/chevron_back\";\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\nimport styled from \"styled-components\";\nimport persik from \"../img/persik.png\";\n\nconst osName = platform();\n\nconst Persik = (props) => (\n  <Panel id={props.id}>\n    <PanelHeader\n      left={\n        <PanelHeaderButton onClick={props.go} data-to=\"home\">\n          {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n        </PanelHeaderButton>\n      }\n    >\n      Добро пожаловать\n    </PanelHeader>\n\n    <StyledImg className=\"Persik\" src={persik} alt=\"Persik The Cat\" />\n  </Panel>\n);\n\nPersik.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n\nconst StyledImg = styled.img`\n   {\n    display: block;\n    width: 30%;\n    max-width: 240px;\n    margin: 20px auto;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}